syntax = "proto3";
package alice.checkers.v1;

option go_package = "github.com/alice/checkers";

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "alice/checkers/v1/types.proto";
import "cosmos_proto/cosmos.proto";
// import "google/protobuf/timestamp.proto";

// Msg defines the module Msg service.
service CheckersTorram {
  option (cosmos.msg.v1.service) = true;

  // CreateGame create a game.
  rpc CheckersCreateGm(ReqCheckersTorram)
    returns (ResCheckersTorram);
}

// MsgCreateGame defines the Msg/CreateGame request type.
message ReqCheckersTorram {
  option (cosmos.msg.v1.signer) = "creator";

  // creator is the message sender.
  string creator = 1;
  string index = 2 ;
  string black = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string red = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  //game data
  string start_time = 5;
  string end_time = 6;
}

// MsgCreateGameResponse defines the Msg/CreateGame response type.
message ResCheckersTorram {}